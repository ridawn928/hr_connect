import 'package:hr_connect/features/attendance/domain/entities/qr_code.dart';

/// A service responsible for validating QR codes used in the attendance system.
/// 
/// This validator checks:
/// - Time validity: QR codes expire after 15 minutes
/// - Digital signature: Ensures the QR code was generated by an authorized system
/// - Replay protection: Prevents the same QR code from being used twice
class QrCodeValidator {
  final Duration validityWindow;
  final Set<String> usedNonces = {};
  
  /// Creates a validator with a specific time window for validity.
  ///
  /// By default, QR codes are valid for 15 minutes from generation time.
  QrCodeValidator({this.validityWindow = const Duration(minutes: 15)});
  
  /// Validates the given QR code against security and time constraints.
  /// 
  /// Returns a [ValidationResult] with [isValid] set to true if the code
  /// is valid and can be used for attendance tracking.
  ValidationResult validate(QrCode code) {
    // Check if the QR code is expired
    if (!code.isValid(validityWindow: validityWindow)) {
      return ValidationResult.invalid(
        QrValidationError.expired,
        errorMessage: 'QR code has expired',
      );
    }
    
    // Check for replay attacks using nonce
    if (usedNonces.contains(code.nonce)) {
      return ValidationResult.invalid(
        QrValidationError.replayAttempt,
        errorMessage: 'This QR code has already been used',
      );
    }
    
    // In a real implementation, we would validate the signature here
    // For simplicity, we're just checking if it's not the default "unsigned"
    if (code.signature == 'unsigned') {
      return ValidationResult.invalid(
        QrValidationError.invalidSignature,
        errorMessage: 'QR code signature is invalid',
      );
    }
    
    // Mark the nonce as used to prevent replay attacks
    usedNonces.add(code.nonce);
    
    // All checks passed
    return ValidationResult.valid();
  }
  
  /// Clears expired nonces to prevent memory leaks
  void clearExpiredNonces() {
    // In a real implementation, we would store nonces with timestamps
    // and clear only the expired ones
    
    // This is a simplified implementation
    if (usedNonces.length > 1000) {
      usedNonces.clear();
    }
  }
}
